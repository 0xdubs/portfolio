{"version":3,"sources":["../../src/dom.ts"],"names":["getOwnerWindow","node","Element","getOwnerDocument","defaultView","window","ownerDocument","document","canUseDOM","createElement","isBrowser","dataAttr","condition","undefined","ariaAttr","cx","classNames","filter","Boolean","join","getActiveElement","doc","activeElement","contains","parent","child","addDomEvent","target","eventName","handler","options","addEventListener","removeEventListener","normalizeEventKey","event","key","keyCode","isArrowKey","indexOf","eventKey","getRelatedTarget","currentTarget","originalTarget","nativeEvent","explicitOriginalTarget","relatedTarget","isRightClick","button"],"mappings":"AAEA,OAAO,SAASA,cAAT,CAAwBC,IAAxB,EAA2D;AAAA;;AAChE,SAAOA,IAAI,YAAYC,OAAhB,iDACHC,gBAAgB,CAACF,IAAD,CADb,qBACH,kBAAwBG,WADrB,oCACoCC,MADpC,GAEHA,MAFJ;AAGD;AAED,OAAO,SAASF,gBAAT,CAA0BF,IAA1B,EAA+D;AAAA;;AACpE,SAAOA,IAAI,YAAYC,OAAhB,0BAA0BD,IAAI,CAACK,aAA/B,kCAAgDC,QAAhD,GAA2DA,QAAlE;AACD;AAED,OAAO,SAASC,SAAT,GAA8B;AACnC,SAAO,CAAC,EACN,OAAOH,MAAP,KAAkB,WAAlB,IACAA,MAAM,CAACE,QADP,IAEAF,MAAM,CAACE,QAAP,CAAgBE,aAHV,CAAR;AAKD;AAED,OAAO,IAAMC,SAAS,GAAGF,SAAS,EAA3B;AAEP,OAAO,IAAMG,QAAQ,GAAIC,SAAD,IACrBA,SAAS,GAAG,EAAH,GAAQC,SADb;AAGP,OAAO,IAAMC,QAAQ,GAAIF,SAAD,IACtBA,SAAS,GAAG,IAAH,GAAUC,SADd;AAGP,OAAO,IAAME,EAAE,GAAG,SAALA,EAAK;AAAA,oCAAIC,UAAJ;AAAIA,IAAAA,UAAJ;AAAA;;AAAA,SAA0BA,UAAU,CAACC,MAAX,CAAkBC,OAAlB,EAA2BC,IAA3B,CAAgC,GAAhC,CAA1B;AAAA,CAAX;AAEP,OAAO,SAASC,gBAAT,CAA0BnB,IAA1B,EAA8C;AACnD,MAAMoB,GAAG,GAAGlB,gBAAgB,CAACF,IAAD,CAA5B;AACA,SAAOoB,GAAP,oBAAOA,GAAG,CAAEC,aAAZ;AACD;AAED,OAAO,SAASC,QAAT,CAAkBC,MAAlB,EAA8CC,KAA9C,EAAkE;AACvE,MAAI,CAACD,MAAL,EAAa,OAAO,KAAP;AACb,SAAOA,MAAM,KAAKC,KAAX,IAAoBD,MAAM,CAACD,QAAP,CAAgBE,KAAhB,CAA3B;AACD;AAED,OAAO,SAASC,WAAT,CACLC,MADK,EAELC,SAFK,EAGLC,OAHK,EAILC,OAJK,EAKL;AACAH,EAAAA,MAAM,CAACI,gBAAP,CAAwBH,SAAxB,EAAmCC,OAAnC,EAA4CC,OAA5C;AACA,SAAO,MAAM;AACXH,IAAAA,MAAM,CAACK,mBAAP,CAA2BJ,SAA3B,EAAsCC,OAAtC,EAA+CC,OAA/C;AACD,GAFD;AAGD;AAED;AACA;AACA;AACA;;AACA,OAAO,SAASG,iBAAT,CACLC,KADK,EAEL;AACA,MAAM;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,MAAmBF,KAAzB;AAEA,MAAMG,UAAU,GACdD,OAAO,IAAI,EAAX,IAAiBA,OAAO,IAAI,EAA5B,IAAkCD,GAAG,CAACG,OAAJ,CAAY,OAAZ,MAAyB,CAD7D;AAGA,MAAMC,QAAQ,GAAGF,UAAU,aAAWF,GAAX,GAAmBA,GAA9C;AAEA,SAAOI,QAAP;AACD;AAED,OAAO,SAASC,gBAAT,CACLN,KADK,EAEL;AAAA;;AACA,MAAMP,MAAM,oBAAIO,KAAK,CAACP,MAAV,4BAAoBO,KAAK,CAACO,aAAtC;AACA,MAAMnB,aAAa,GAAGF,gBAAgB,CAACO,MAAD,CAAtC;AACA,MAAMe,cAAc,GAAIR,KAAD,CAAeS,WAAf,CAA2BC,sBAAlD;AACA,yCAAQV,KAAK,CAACW,aAAd,mCAA+BH,cAA/B,mBAAiDpB,aAAjD;AACD;AAED,OAAO,SAASwB,YAAT,CAAsBZ,KAAtB,EAAkE;AACvE,SAAOA,KAAK,CAACa,MAAN,KAAiB,CAAxB;AACD","sourcesContent":["import { Booleanish, EventKeys } from \"./types\"\n\nexport function getOwnerWindow(node?: HTMLElement | null): Window {\n  return node instanceof Element\n    ? getOwnerDocument(node)?.defaultView ?? window\n    : window\n}\n\nexport function getOwnerDocument(node?: HTMLElement | null): Document {\n  return node instanceof Element ? node.ownerDocument ?? document : document\n}\n\nexport function canUseDOM(): boolean {\n  return !!(\n    typeof window !== \"undefined\" &&\n    window.document &&\n    window.document.createElement\n  )\n}\n\nexport const isBrowser = canUseDOM()\n\nexport const dataAttr = (condition: boolean | undefined) =>\n  (condition ? \"\" : undefined) as Booleanish\n\nexport const ariaAttr = (condition: boolean | undefined) =>\n  condition ? true : undefined\n\nexport const cx = (...classNames: any[]) => classNames.filter(Boolean).join(\" \")\n\nexport function getActiveElement(node?: HTMLElement) {\n  const doc = getOwnerDocument(node)\n  return doc?.activeElement as HTMLElement\n}\n\nexport function contains(parent: HTMLElement | null, child: HTMLElement) {\n  if (!parent) return false\n  return parent === child || parent.contains(child)\n}\n\nexport function addDomEvent(\n  target: EventTarget,\n  eventName: string,\n  handler: EventListener,\n  options?: AddEventListenerOptions,\n) {\n  target.addEventListener(eventName, handler, options)\n  return () => {\n    target.removeEventListener(eventName, handler, options)\n  }\n}\n\n/**\n * Get the normalized event key across all browsers\n * @param event keyboard event\n */\nexport function normalizeEventKey(\n  event: Pick<KeyboardEvent, \"key\" | \"keyCode\">,\n) {\n  const { key, keyCode } = event\n\n  const isArrowKey =\n    keyCode >= 37 && keyCode <= 40 && key.indexOf(\"Arrow\") !== 0\n\n  const eventKey = isArrowKey ? `Arrow${key}` : key\n\n  return eventKey as EventKeys\n}\n\nexport function getRelatedTarget(\n  event: Pick<FocusEvent, \"relatedTarget\" | \"target\" | \"currentTarget\">,\n) {\n  const target = (event.target ?? event.currentTarget) as HTMLElement\n  const activeElement = getActiveElement(target)\n  const originalTarget = (event as any).nativeEvent.explicitOriginalTarget\n  return (event.relatedTarget ?? originalTarget ?? activeElement) as HTMLElement\n}\n\nexport function isRightClick(event: Pick<MouseEvent, \"button\">): boolean {\n  return event.button !== 0\n}\n"],"file":"dom.js"}