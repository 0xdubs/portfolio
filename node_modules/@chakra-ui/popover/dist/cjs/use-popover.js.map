{"version":3,"sources":["../../src/use-popover.ts"],"names":["TRIGGER","click","hover","usePopover","props","closeOnBlur","closeOnEsc","initialFocusRef","id","returnFocusOnClose","autoFocus","arrowSize","arrowShadowColor","trigger","openDelay","closeDelay","isLazy","lazyBehavior","popperProps","isOpen","onClose","onOpen","onToggle","triggerRef","popoverRef","isHoveringRef","hasBeenOpened","current","hasHeader","setHasHeader","hasBody","setHasBody","triggerId","popoverId","headerId","bodyId","enabled","referenceRef","getArrowProps","getPopperProps","getArrowInnerProps","forceUpdate","ref","focusRef","visible","shouldFocus","shouldRenderChildren","hasBeenSelected","isSelected","getPopoverProps","_ref","popoverProps","style","transformOrigin","popperCSSVars","varRef","children","tabIndex","role","onKeyDown","event","key","onBlur","relatedTarget","targetIsPopover","targetIsTrigger","isValidBlur","undefined","onMouseEnter","onMouseLeave","setTimeout","getPopoverPositionerProps","forwardedRef","visibility","openTimeout","closeTimeout","getTriggerProps","triggerProps","onClick","onFocus","window","clearTimeout","getHeaderProps","node","getBodyProps"],"mappings":"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","sourcesContent":["import {\n  useDisclosure,\n  useFocusOnHide,\n  useFocusOnPointerDown,\n  useFocusOnShow,\n  useIds,\n} from \"@chakra-ui/hooks\"\nimport { popperCSSVars, usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport { HTMLProps, mergeRefs, PropGetter } from \"@chakra-ui/react-utils\"\nimport {\n  callAllHandlers,\n  contains,\n  determineLazyBehavior,\n  FocusableElement,\n  getRelatedTarget,\n  LazyBehavior,\n  px,\n} from \"@chakra-ui/utils\"\nimport { RefObject, useCallback, useEffect, useRef, useState } from \"react\"\n\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\",\n} as const\n\nexport interface UsePopoverProps extends UsePopperProps {\n  /**\n   * The html `id` attribute of the popover.\n   * If not provided, we generate a unique id.\n   *\n   * This `id` is also used to auto-generate the `aria-labelledby`\n   * and `aria-decribedby` attributes that points to the `PopoverHeader` and `PopoverBody`\n   */\n  id?: string\n  /**\n   * If `true`, the popover will be opened in controlled mode.\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the popover will be initially opened.\n   */\n  defaultIsOpen?: boolean\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: RefObject<FocusableElement>\n  /**\n   * If `true`, focus will be returned to the element that triggers the popover\n   * when it closes\n   */\n  returnFocusOnClose?: boolean\n  /**\n   * If `true`, focus will be transferred to the first interactive element\n   * when the popover opens\n   */\n  autoFocus?: boolean\n  /**\n   * If `true`, the popover will close when you blur out it by\n   * clicking outside or tabbing out\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the popover will close when you hit the `Esc` key\n   */\n  closeOnEsc?: boolean\n  /**\n   * Callback fired when the popover opens\n   */\n  onOpen?: () => void\n  /**\n   * Callback fired when the popover closes\n   */\n  onClose?: () => void\n  /**\n   * The size of the popover arrow\n   */\n  arrowSize?: number\n  /**\n   * The `box-shadow` of the popover arrow\n   */\n  arrowShadowColor?: string\n  /**\n   * The interaction that triggers the popover.\n   *\n   * `hover` - means the popover will open when you hover with mouse or\n   * focus with keyboard on the popover trigger\n   *\n   * `click` - means the popover will open on click or\n   * press `Enter` to `Space` on keyboard\n   */\n  trigger?: keyof typeof TRIGGER\n  openDelay?: number\n  closeDelay?: number\n  /**\n   * Performance 🚀:\n   * If `true`, the PopoverContent rendering will be deferred\n   * until the popover is open.\n   */\n  isLazy?: boolean\n  /**\n   * Performance 🚀:\n   * The lazy behavior of popover's content when not visible.\n   * Only works when `isLazy={true}`\n   *\n   * - \"unmount\": The popover's content is always unmounted when not open.\n   * - \"keepMounted\": The popover's content initially unmounted,\n   * but stays mounted when popover is open.\n   *\n   * @default \"unmount\"\n   */\n  lazyBehavior?: LazyBehavior\n}\n\n/**\n * @internal\n */\nexport function usePopover(props: UsePopoverProps = {}) {\n  const {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    id,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowSize,\n    arrowShadowColor,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n    lazyBehavior = \"unmount\",\n    ...popperProps\n  } = props\n\n  const { isOpen, onClose, onOpen, onToggle } = useDisclosure(props)\n\n  const triggerRef = useRef<HTMLElement>(null)\n  const popoverRef = useRef<HTMLElement>(null)\n\n  const isHoveringRef = useRef(false)\n\n  const hasBeenOpened = useRef(false)\n  if (isOpen) {\n    hasBeenOpened.current = true\n  }\n\n  const [hasHeader, setHasHeader] = useState(false)\n  const [hasBody, setHasBody] = useState(false)\n\n  const [triggerId, popoverId, headerId, bodyId] = useIds(\n    id,\n    \"popover-trigger\",\n    \"popover-content\",\n    \"popover-header\",\n    \"popover-body\",\n  )\n\n  const {\n    referenceRef,\n    getArrowProps,\n    getPopperProps,\n    getArrowInnerProps,\n    forceUpdate,\n  } = usePopper({\n    ...popperProps,\n    enabled: isOpen,\n  })\n\n  useFocusOnPointerDown({\n    enabled: isOpen,\n    ref: triggerRef,\n  })\n\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click,\n  })\n\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === TRIGGER.click,\n  })\n\n  const shouldRenderChildren = determineLazyBehavior({\n    hasBeenSelected: hasBeenOpened.current,\n    isLazy,\n    lazyBehavior,\n    isSelected: isOpen,\n  })\n\n  const getPopoverProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const popoverProps: HTMLProps = {\n        ...props,\n        style: {\n          ...props.style,\n          transformOrigin: popperCSSVars.transformOrigin.varRef,\n        },\n        ref: mergeRefs(popoverRef, _ref),\n        children: shouldRenderChildren ? props.children : null,\n        id: popoverId,\n        tabIndex: -1,\n        role: \"dialog\",\n        onKeyDown: callAllHandlers(props.onKeyDown, (event) => {\n          if (closeOnEsc && event.key === \"Escape\") {\n            onClose()\n          }\n        }),\n        onBlur: callAllHandlers(props.onBlur, (event) => {\n          const relatedTarget = getRelatedTarget(event)\n          const targetIsPopover = contains(popoverRef.current, relatedTarget)\n          const targetIsTrigger = contains(triggerRef.current, relatedTarget)\n          const isValidBlur = !targetIsPopover && !targetIsTrigger\n\n          if (isOpen && closeOnBlur && isValidBlur) {\n            onClose()\n          }\n        }),\n        \"aria-labelledby\": hasHeader ? headerId : undefined,\n        \"aria-describedby\": hasBody ? bodyId : undefined,\n      }\n\n      if (trigger === TRIGGER.hover) {\n        popoverProps.role = \"tooltip\"\n        popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n        })\n        popoverProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n          setTimeout(onClose, closeDelay)\n        })\n      }\n\n      return popoverProps\n    },\n    [\n      shouldRenderChildren,\n      popoverId,\n      hasHeader,\n      headerId,\n      hasBody,\n      bodyId,\n      trigger,\n      closeOnEsc,\n      onClose,\n      isOpen,\n      closeOnBlur,\n      closeDelay,\n    ],\n  )\n\n  const getPopoverPositionerProps: PropGetter = useCallback(\n    (props = {}, forwardedRef = null) =>\n      getPopperProps(\n        {\n          ...props,\n          style: {\n            [popperCSSVars.arrowSize.var]: arrowSize\n              ? px(arrowSize)\n              : undefined,\n            [popperCSSVars.arrowShadowColor.var]: arrowShadowColor,\n            visibility: isOpen ? \"visible\" : \"hidden\",\n            ...props.style,\n          },\n        },\n        forwardedRef,\n      ),\n    [arrowShadowColor, arrowSize, isOpen, getPopperProps],\n  )\n\n  const openTimeout = useRef<number>()\n  const closeTimeout = useRef<number>()\n\n  const getTriggerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps: HTMLProps = {\n        ...props,\n        ref: mergeRefs(triggerRef, _ref, referenceRef),\n        id: triggerId,\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": popoverId,\n      }\n\n      if (trigger === TRIGGER.click) {\n        triggerProps.onClick = callAllHandlers(props.onClick, onToggle)\n      }\n\n      if (trigger === TRIGGER.hover) {\n        /**\n         * Any content that shows on pointer hover should also show on keyboard focus.\n         * Consider focus and blur to be the `hover` for keyboard users.\n         *\n         * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n         */\n        triggerProps.onFocus = callAllHandlers(props.onFocus, onOpen)\n        triggerProps.onBlur = callAllHandlers(props.onBlur, onClose)\n\n        /**\n         * Any content that shows on hover or focus must be dismissible.\n         * This case pressing `Escape` will dismiss the popover\n         */\n        triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, (event) => {\n          if (event.key === \"Escape\") {\n            onClose()\n          }\n        })\n\n        triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n          openTimeout.current = window.setTimeout(onOpen, openDelay)\n        })\n\n        triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n\n          if (openTimeout.current) {\n            clearTimeout(openTimeout.current)\n            openTimeout.current = undefined\n          }\n\n          closeTimeout.current = window.setTimeout(() => {\n            if (isHoveringRef.current === false) {\n              onClose()\n            }\n          }, closeDelay)\n        })\n      }\n\n      return triggerProps\n    },\n    [\n      triggerId,\n      isOpen,\n      popoverId,\n      trigger,\n      referenceRef,\n      onToggle,\n      onOpen,\n      onClose,\n      openDelay,\n      closeDelay,\n    ],\n  )\n\n  useEffect(() => {\n    return () => {\n      if (openTimeout.current) {\n        clearTimeout(openTimeout.current)\n      }\n      if (closeTimeout.current) {\n        clearTimeout(closeTimeout.current)\n      }\n    }\n  }, [])\n\n  const getHeaderProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      id: headerId,\n      ref: mergeRefs(ref, (node: HTMLElement | null) => {\n        setHasHeader(!!node)\n      }),\n    }),\n    [headerId],\n  )\n\n  const getBodyProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      id: bodyId,\n      ref: mergeRefs(ref, (node) => {\n        setHasBody(!!node)\n      }),\n    }),\n    [bodyId],\n  )\n\n  return {\n    forceUpdate,\n    isOpen,\n    onClose,\n    getArrowProps,\n    getArrowInnerProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n    getHeaderProps,\n    getBodyProps,\n  }\n}\n\nexport type UsePopoverReturn = ReturnType<typeof usePopover>\n"],"file":"use-popover.js"}